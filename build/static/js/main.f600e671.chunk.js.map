{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","width","bullet","display","margin","transform","title","fontSize","pos","marginBottom","SiteTitle","styled","div","PageHeading","CardContainer","StyledCard","Card","SiteMenu","AppBar","position","Toolbar","IconButton","edge","className","aria-label","Button","App","classes","Container","variant","CardContent","Typography","color","gutterBottom","component","target","href","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f600e671.chunk.js","sourcesContent":["import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\n\nimport './App.css';\n\n\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Card from '@material-ui/core/Card';\n\nimport CardContent from '@material-ui/core/CardContent';\n\n\nimport styled from 'styled-components';\nimport { IconButton } from '@material-ui/core';\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    width: '300px'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nconst SiteTitle = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst PageHeading = styled.div`\n  font-family: Roboto;\n  font-size: 2rem;\n  color: red;\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst StyledCard = styled(Card)`\n  margin: 20px;\n`\nfunction App() {\n\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n        <SiteMenu/>\n        <Container>\n          <PageHeading>Maths Materials</PageHeading>\n          \n          <CardContainer>\n         \n          <StyledCard className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                Algebra\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                Quadratic - Completing the Square\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                Level 8/9\n              </Typography>\n              <Typography variant=\"body2\" component=\"div\">\n                <p>mr-salih questions</p>\n                <ul>\n                    <li><a target=\"_new\" href=\"https://www.dropbox.com/s/95rpdrpruiaz6el/mr-salih-complete-the-square-questions.pdf?dl=0\">Mr Salih Questions</a></li>\n                    <li><a target=\"_new\" href=\"https://www.dropbox.com/s/wsr61x0ymor6jkb/mr-salih-completing-the-square-solutions%20.pdf?dl=0\">Mr Salih Answers</a></li>\n                    <li><a target=\"_new\" href=\"https://youtu.be/Y_Sb0iyQZ98\">Mr Salih Video Solutions</a></li>\n                </ul>\n                \n\n                <p>Maths Genie Questions</p>\n                <ul>\n                  <li><a href=\"https://mathsgenie.co.uk/resources/9-completing-the-square.pdf\">Maths Genie Questions</a></li>\n                  <li><a href=\"https://mathsgenie.co.uk/resources/9-completing-the-squareans.pdf\">Maths Genie Solutions</a></li>\n                  <li></li>\n                </ul>\n\n                <p>Exam Questions</p>\n                <ul>\n                  <li></li>\n                  <li></li>\n                </ul>\n                \n                \n              </Typography>\n            </CardContent>\n          </StyledCard>\n\n          <StyledCard className={classes.root} variant=\"outlined\">\n            <CardContent>\n              <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                Algebra\n              </Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                Algebraic Fractions\n              </Typography>\n              <Typography className={classes.pos} color=\"textSecondary\">\n                Level 8/9\n              </Typography>\n              <Typography variant=\"body2\" component=\"div\">\n                <p>mr-salih questions</p>\n                <ul>\n                    <li><a target=\"_new\" href=\"https://www.dropbox.com/s/wfv86t60z31dplo/mr-salih-questions.pdf?dl=0\">Mr Salih Questions</a></li>\n                    <li><a target=\"_new\" href=\"https://www.dropbox.com/s/n957q9v9rel18xy/AlgebraicFractions-Solutions.pdf?dl=0\">Mr Salih Answers</a></li>\n                    <li><a target=\"_new\" href=\"https://youtu.be/xG-oOQ4MNFY\">Mr Salih Video Solutions</a></li>\n                </ul>\n                \n\n                <p>Maths Genie Questions</p>\n                <ul>\n                  <li><a target=\"_new\" href=\"https://mathsgenie.co.uk/resources/7-algebraic-fractions.pdf\">Maths Genie questions</a></li>\n                  <li><a target=\"_new\" href=\"https://mathsgenie.co.uk/resources/7-algebraic-fractionsans.pdf\">Maths Genie answers</a></li>\n                  <li><a target=\"_new\" href=\"https://youtu.be/Dr5jmSGv-u0\">Maths Genie Video Walk Through</a></li>\n                </ul>\n\n                <p>Exam Questions</p>\n                <ul>\n                  <li><a target=\"_new\" href=\"https://www.dropbox.com/s/wclffgcog552l0j/igcse-algebraic-fractions.pdf?dl=0\">Exam Questions</a></li>\n                  <li><a target=\"_new\" href=\"https://www.dropbox.com/s/uhr2zbs9riclmyc/igcse-algebraic-fractions.solutions.pdf?dl=0\">Exam Solutions.</a></li>\n                </ul>\n                \n                \n              </Typography>\n            </CardContent>\n          </StyledCard>\n\n\n          </CardContainer>\n        </Container>\n    </div>\n  );\n}\n\n\nconst SiteMenu = () => (\n  <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton edge=\"start\" className=\"\" aria-label=\"menu\">\n          <MenuIcon/>\n        </IconButton>\n        <SiteTitle>\n          mrsalih-maths\n        </SiteTitle>\n        <Button>Login</Button>\n      </Toolbar>\n    </AppBar>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}